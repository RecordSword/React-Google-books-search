{"version":3,"sources":["components/Jumbotron.js","components/Nav.js","utils/API.js","components/Grid.js","components/BookCard.js","pages/Search.js","pages/Saved.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","className","Nav","location","useLocation","to","pathname","searchTerm","axios","get","bookData","post","id","delete","Container","fluid","children","Row","BookCard","_id","title","author","description","image","link","handleBookDelete","handleBookSave","useState","deleteButtonState","setDeleteButtonState","saveButtonState","setSaveButtonState","map","href","target","rel","disabled","onClick","src","alt","Search","setSearchTerm","bookFromSearch","setBookFromSearch","data","a","API","response","console","log","handleFormSubmit","items","length","book","volumeInfo","authors","imageLinks","smallThumbnail","infoLink","arrayOfBookResults","onChange","event","value","key","undefined","Saved","savedBooks","setSavedBooks","useEffect","loadBooks","App","basename","process","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a627509c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div className=\"jumbotron text-center\">\r\n            <h1>React Google Books Search</h1>\r\n            <hr></hr>\r\n            <h2>Search for and save books of interest</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n    const location = useLocation();\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-fixed-top\">\r\n                <button className=\"navbar-toggler d-none\"></button>\r\n                <div className=\"collapse navbar-collapse show\">\r\n                    <h3 className=\"google-books\">Google Books</h3>\r\n                    <ul className=\"navbar-nav flex-row\">\r\n                        <li className=\"nav-item \">\r\n                            <Link to=\"/\" className={location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\r\n                                SEARCH\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/saved\" className={location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}>\r\n                                SAVED\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","import axios from \"axios\";\r\n\r\nexport default {\r\n    searchForBookTitle: function(searchTerm) {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${searchTerm}`);\r\n    },\r\n    getSavedBooks: function() {\r\n        return axios.get(\"/api/books/\");\r\n    },\r\n    postNewBook: function(bookData) {\r\n        return axios.post(\"/api/books/\", bookData);\r\n    },\r\n    deleteBook: function(id) {\r\n        return axios.delete(`/api/books/${id}`);\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport function Container({ fluid, children }) {\r\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Row({ children }) {\r\n    return <div className={`row`}>{children}</div>;\r\n}\r\n\r\nexport function Column({ size, children }) {\r\n    return <div className={\"col-\" + size}>{children}</div>\r\n}","import React, { useState } from \"react\";\r\n\r\nfunction BookCard({ _id, title, author, description, image, link, location, handleBookDelete, handleBookSave }) {\r\n    const [deleteButtonState, setDeleteButtonState] = useState(false);\r\n    const [saveButtonState, setSaveButtonState] = useState(false);\r\n\r\n    const saveHandler = () => {\r\n        setSaveButtonState(true);\r\n        handleBookSave({ title, author, description, image, link });\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        setDeleteButtonState(true);\r\n        handleBookDelete({ _id });\r\n    }\r\n\r\n    return (\r\n        <div className='result-card'>\r\n            <div className='row result-header'>\r\n                <div className='col-12 col-sm-5 offset-sm-1'>\r\n                    <h4>{title}</h4>\r\n                    <small>Written By: {\r\n                        author.map(author => `${author} `)\r\n                    }</small>\r\n                </div>\r\n                <span className='col-12 col-sm-5 book-buttons'>\r\n                    <a\r\n                        className=\"button\"\r\n                        href={link}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >View</a>\r\n\r\n                    {location === \"Search\" ?\r\n                        <button\r\n                            disabled={saveButtonState ? true : false}\r\n                            onClick={() => saveHandler()}\r\n                            className=\"button\"\r\n                        >Save</button> :\r\n                        <button\r\n                            disabled={deleteButtonState ? true : false}\r\n                            onClick={() => deleteHandler()}\r\n                            className=\"button\"\r\n                        >Delete</button>\r\n                    }\r\n                </span>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-4 col-sm-3 justify-content-sm-center'>\r\n                    <img className=\"rounded mx-auto d-block\" src={image} alt={title} />\r\n                </div>\r\n                <div className='col-8 col-sm-9 book-description'>\r\n                    <br></br>\r\n                    <p className='lead'>Description: </p>\r\n                    {description}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookCard;","import React, { useState } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Container, Row } from \"../components/Grid\";\r\nimport BookCard from \"../components/BookCard\";\r\n\r\n\r\nfunction Search() {\r\n    const [searchTerm, setSearchTerm] = useState();\r\n    const [bookFromSearch, setBookFromSearch] = useState();\r\n\r\n    const handleInputChange = event => {\r\n        return setSearchTerm(event.target.value);\r\n    }\r\n\r\n    const handleBookSave = async (data) => {\r\n        try {\r\n            const response = await API.postNewBook(data);\r\n            // change then response to socket.io notification\r\n            console.log(response);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleFormSubmit = async () => {\r\n        try {\r\n            const { data: { items } } = await API.searchForBookTitle(searchTerm);\r\n            if (items.length === 0) return;\r\n            const arrayOfBookResults = await items.map(book => {\r\n                return {\r\n                    _id: book.id,\r\n                    title: book.volumeInfo.title,\r\n                    author: (!(\"authors\" in book.volumeInfo) ?\r\n                        [\"Unknown\"] :\r\n                        book.volumeInfo.authors),\r\n                    image: (!(\"imageLinks\" in book.volumeInfo) ?\r\n                        \"https://via.placeholder.com/150\" :\r\n                        book.volumeInfo.imageLinks.smallThumbnail),\r\n                    link: book.volumeInfo.infoLink,\r\n                    description: book.volumeInfo.description\r\n                }\r\n            });\r\n            setBookFromSearch(arrayOfBookResults);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <h3 id=\"content-title\">Search For A Book Title.</h3>\r\n                </Row>\r\n                <Row >\r\n                    <input\r\n                        onChange={handleInputChange}\r\n                    ></input>\r\n                    <button\r\n                        className=\"button\"\r\n                        onClick={handleFormSubmit}\r\n                    >Search</button>\r\n                </Row>\r\n                <Row>\r\n                    {!bookFromSearch ?\r\n                        undefined :\r\n                        bookFromSearch.length === 0 ?\r\n                            <h3>No books found</h3> :\r\n                            bookFromSearch.map(book =>\r\n                                <BookCard\r\n                                    {...book}\r\n                                    handleBookSave={handleBookSave}\r\n                                    key={book._id}\r\n                                    location=\"Search\"></BookCard>)\r\n                    }\r\n                </Row>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Container, Row } from \"../components/Grid\";\r\nimport BookCard from \"../components/BookCard\";\r\n\r\nfunction Saved() {\r\n    const [savedBooks, setSavedBooks] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        loadBooks();\r\n    }, [setSavedBooks]);\r\n\r\n    const loadBooks = async () => {\r\n        try {\r\n            const response = await API.getSavedBooks();\r\n            setSavedBooks(response.data);\r\n        } catch (error) {\r\n            console.log(\"Error: \", error);\r\n        }\r\n    }\r\n\r\n    const handleBookDelete = async ({ _id }) => {\r\n        try {\r\n            await API.deleteBook(_id);\r\n            loadBooks();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                {savedBooks.length === 0 ?\r\n                    <Row><h3 id=\"content-title\">No Saved Books To Display.</h3></Row> :   \r\n                    <div>\r\n                        <Row><h3 id=\"content-title\">Your Saved Books: {savedBooks.length}</h3></Row>\r\n                        <Row>{savedBooks.map(book => <BookCard\r\n                            {...book}\r\n                            key={book._id}\r\n                            handleBookDelete={handleBookDelete}\r\n                            location=\"Saved\"></BookCard>)}\r\n                        </Row>\r\n                    </div>    \r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saved;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\"\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Nav></Nav>\n        <Jumbotron></Jumbotron>\n          <Route exact path=\"/\" component={Search}></Route>\n          <Route exact path=\"/saved\" component={Saved}></Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}